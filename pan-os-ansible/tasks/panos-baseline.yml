  - name: debug ip
    debug:
      var:
        mgmt_ip

  - name: hash password
    panos_op:
      ip_address: '{{ mgmt_ip }}'
      username: '{{ username }}'
      password: '{{ password }}'
      cmd: 'request password-hash password "{{ password | urlencode }}"'
    register: password_result

  - name: debug password result
    debug:
      var:
        password_result

  - name: parse stdout xml
    xml:
      xmlstring: '{{ password_result.stdout_xml }}'
      xpath: /response/result/phash
      content: 'text'
    register: phash_result

  - name: debug phash_result
    debug:
      var: phash_result.matches[0].phash

  - name: set password hash for consumption in template
    set_fact:
      phash: '{{ phash_result.matches[0].phash }}'
  - name: hash log password
    panos_op:
      ip_address: '{{ mgmt_ip }}'
      username: '{{ username }}'
      password: '{{ password }}'
      cmd: 'request password-hash password "{{ log_password | urlencode }}"'
    register: log_password_result

  - name: debug log password result
    debug:
      var:
        log_password_result

  - name: parse stdout xml
    xml:
      xmlstring: '{{ log_password_result.stdout_xml }}'
      xpath: /response/result/phash
      content: 'text'
    register: log_phash_result

  - name: debug log_phash_result
    debug:
      var: log_phash_result.matches[0].phash

  - name: set log password hash for consumption in template
    set_fact:
      log_phash: '{{ log_phash_result.matches[0].phash }}'

  - name: Create base configuration from template (Standard)
    template:
      src: templates/panos-baseline-ctsc.xml.j2
      dest: "{{ playbook_dir }}/panos-baseline-ctsc.xml"

  - name: Upload base configuration
    panos_import:
      ip_address: '{{ mgmt_ip }}'
      username: '{{ username }}'
      password: '{{ password }}'
      file: "{{ playbook_dir }}/panos-baseline-ctsc.xml"
      category: "configuration"
    register: result

  - name: load configuration
    panos_loadcfg:
      ip_address: '{{ mgmt_ip }}'
      username: '{{ username }}'
      password: '{{ password }}'
      file: "{{ result.filename }}"
      commit: false
